# Summary of Configurations
# Python: Uses pylint for linting and pytest for testing.
# Rust: Uses cargo clippy for linting and cargo test for testing.
# Java: Uses checkstyle for linting and Maven for testing.
# C: Uses gcc for compilation and cppcheck for linting.
# C++: Uses g++ for compilation and cppcheck for linting.
# JavaScript: Uses ESLint for linting and Jest for testing.
name: CI

on: [push]

jobs:
  # Python Job
  python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          cd Python/Requirements
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint
          pip install pytest
      - name: Analyze the code with pylint
        run: |
          pylint --fail-under=7 --ignore="missing-function-docstring" $(git ls-files '*.py')
      
  # Rust Job
  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Install dependencies
        run: cargo build
      - name: Analyze code with Clippy
        run: cargo clippy -- -D warnings
      - name: Run tests
        run: cargo test

  # Java Job
  java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ["17"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - name: Install dependencies
        run: ./mvnw install -DskipTests
      - name: Analyze code with Checkstyle
        run: ./mvnw checkstyle:check
      - name: Run tests
        run: ./mvnw test

  # C Job
  c:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install GCC
        run: sudo apt-get install -y gcc
      - name: Compile and Lint with GCC and Cppcheck
        run: |
          gcc -Wall -Werror -o main *.c
          cppcheck --enable=all *.c
      - name: Run tests (if applicable)
        run: ./main

  # C++ Job
  cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install G++
        run: sudo apt-get install -y g++
      - name: Compile and Lint with G++ and Cppcheck
        run: |
          g++ -Wall -Werror -o main *.cpp
          cppcheck --enable=all *.cpp
      - name: Run tests (if applicable)
        run: ./main

  # JavaScript Job
  javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          npm install
      - name: Lint with ESLint
        run: |
          npx eslint '**/*.js' --max-warnings=0
      - name: Run tests with Jest
        run: |
          npm test
